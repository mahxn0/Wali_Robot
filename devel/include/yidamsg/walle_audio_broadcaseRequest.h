// Generated by gencpp from file yidamsg/walle_audio_broadcaseRequest.msg
// DO NOT EDIT!


#ifndef YIDAMSG_MESSAGE_WALLE_AUDIO_BROADCASEREQUEST_H
#define YIDAMSG_MESSAGE_WALLE_AUDIO_BROADCASEREQUEST_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace yidamsg
{
template <class ContainerAllocator>
struct walle_audio_broadcaseRequest_
{
  typedef walle_audio_broadcaseRequest_<ContainerAllocator> Type;

  walle_audio_broadcaseRequest_()
    : text()
    , file_type(0)
    , audio_file_id(0)  {
    }
  walle_audio_broadcaseRequest_(const ContainerAllocator& _alloc)
    : text(_alloc)
    , file_type(0)
    , audio_file_id(0)  {
  (void)_alloc;
    }



   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _text_type;
  _text_type text;

   typedef int32_t _file_type_type;
  _file_type_type file_type;

   typedef int32_t _audio_file_id_type;
  _audio_file_id_type audio_file_id;





  typedef boost::shared_ptr< ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> const> ConstPtr;

}; // struct walle_audio_broadcaseRequest_

typedef ::yidamsg::walle_audio_broadcaseRequest_<std::allocator<void> > walle_audio_broadcaseRequest;

typedef boost::shared_ptr< ::yidamsg::walle_audio_broadcaseRequest > walle_audio_broadcaseRequestPtr;
typedef boost::shared_ptr< ::yidamsg::walle_audio_broadcaseRequest const> walle_audio_broadcaseRequestConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace yidamsg

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsMessage': True, 'IsFixedSize': False, 'HasHeader': False}
// {'yidamsg': ['/home/mahxn0/catkin_ws/src/yidamsg/msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'geometry_msgs': ['/opt/ros/kinetic/share/geometry_msgs/cmake/../msg'], 'sensor_msgs': ['/opt/ros/kinetic/share/sensor_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsMessage< ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "3f145f215a03d3616b32c0d7f2507d19";
  }

  static const char* value(const ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x3f145f215a03d361ULL;
  static const uint64_t static_value2 = 0x6b32c0d7f2507d19ULL;
};

template<class ContainerAllocator>
struct DataType< ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "yidamsg/walle_audio_broadcaseRequest";
  }

  static const char* value(const ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "string text\n\
int32 file_type\n\
int32 audio_file_id\n\
";
  }

  static const char* value(const ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.text);
      stream.next(m.file_type);
      stream.next(m.audio_file_id);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct walle_audio_broadcaseRequest_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::yidamsg::walle_audio_broadcaseRequest_<ContainerAllocator>& v)
  {
    s << indent << "text: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.text);
    s << indent << "file_type: ";
    Printer<int32_t>::stream(s, indent + "  ", v.file_type);
    s << indent << "audio_file_id: ";
    Printer<int32_t>::stream(s, indent + "  ", v.audio_file_id);
  }
};

} // namespace message_operations
} // namespace ros

#endif // YIDAMSG_MESSAGE_WALLE_AUDIO_BROADCASEREQUEST_H
